#!/bin/bash

# Script de setup para Ghost CMS Fork
# Configura o ambiente completo para desenvolvimento e produ√ß√£o

set -e

echo "üöÄ Configurando Ghost CMS Fork..."

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para log
log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
    exit 1
}

# Verificar se Docker est√° instalado
if ! command -v docker &> /dev/null; then
    error "Docker n√£o est√° instalado. Por favor, instale o Docker primeiro."
fi

# Verificar se Docker Compose est√° instalado
if ! command -v docker-compose &> /dev/null; then
    error "Docker Compose n√£o est√° instalado. Por favor, instale o Docker Compose primeiro."
fi

# Verificar se Node.js est√° instalado
if ! command -v node &> /dev/null; then
    warn "Node.js n√£o est√° instalado. Instalando depend√™ncias apenas via Docker..."
    NODE_AVAILABLE=false
else
    NODE_AVAILABLE=true
fi

# Verificar se Yarn est√° instalado
if [ "$NODE_AVAILABLE" = true ] && ! command -v yarn &> /dev/null; then
    warn "Yarn n√£o est√° instalado. Instalando..."
    npm install -g yarn
fi

log "Criando diret√≥rio de conte√∫do..."
mkdir -p content

log "Definindo permiss√µes corretas..."
chmod 755 content

log "Construindo imagem Docker..."
docker build -t ghost-cms-fork .

log "Subindo servi√ßos..."
docker-compose up -d

log "Aguardando servi√ßos iniciarem..."
sleep 30

# Verificar se os servi√ßos est√£o rodando
if ! docker-compose ps | grep -q "Up"; then
    error "Falha ao iniciar os servi√ßos. Verifique os logs com: docker-compose logs"
fi

log "Verificando sa√∫de dos servi√ßos..."
sleep 10

# Verificar MySQL
if docker-compose exec mysql mysqladmin ping -h localhost -u mysql -p91cf92ea3a47f6ced4f7 --silent; then
    log "‚úÖ MySQL est√° rodando"
else
    warn "‚ö†Ô∏è MySQL pode n√£o estar totalmente pronto ainda"
fi

# Verificar Ghost
if curl -f http://localhost:2368/ghost/ &> /dev/null; then
    log "‚úÖ Ghost est√° rodando"
else
    warn "‚ö†Ô∏è Ghost pode n√£o estar totalmente pronto ainda"
fi

log "Executando seed (se dispon√≠vel)..."
if [ "$NODE_AVAILABLE" = true ]; then
    yarn install
    node seed.js || warn "Seed falhou ou j√° foi executado"
else
    warn "Seed n√£o executado - Node.js n√£o dispon√≠vel localmente"
fi

echo ""
echo -e "${BLUE}üéâ Setup conclu√≠do!${NC}"
echo ""
echo -e "${GREEN}üìã Pr√≥ximos passos:${NC}"
echo "1. Acesse: http://localhost:2368"
echo "2. Admin: http://localhost:2368/ghost/"
echo "3. Login: admin@clebersocial.com.br / admin123!@#"
echo ""
echo -e "${GREEN}üîß Comandos √∫teis:${NC}"
echo "‚Ä¢ Ver logs: docker-compose logs -f"
echo "‚Ä¢ Parar: docker-compose down"
echo "‚Ä¢ Reiniciar: docker-compose restart"
echo "‚Ä¢ Shell: docker-compose exec ghost-fork /bin/bash"
echo ""
echo -e "${GREEN}üìö Para deploy no Easypanel:${NC}"
echo "1. Commit e push do c√≥digo"
echo "2. Importe o reposit√≥rio no Easypanel"
echo "3. Configure o dom√≠nio: blog.clebersocial.com.br"
echo ""
echo -e "${YELLOW}‚ö†Ô∏è IMPORTANTE: Altere a senha padr√£o ap√≥s o primeiro login!${NC}"
