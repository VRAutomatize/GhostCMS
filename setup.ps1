# Script de setup para Ghost CMS Fork (PowerShell)
# Configura o ambiente completo para desenvolvimento e produ√ß√£o

param(
    [switch]$SkipSeed
)

# Configurar cores para output
$Host.UI.RawUI.ForegroundColor = "White"

function Write-Info {
    param($Message)
    Write-Host "[INFO] $Message" -ForegroundColor Green
}

function Write-Warning {
    param($Message)
    Write-Host "[WARN] $Message" -ForegroundColor Yellow
}

function Write-Error {
    param($Message)
    Write-Host "[ERROR] $Message" -ForegroundColor Red
    exit 1
}

Write-Host "üöÄ Configurando Ghost CMS Fork..." -ForegroundColor Blue

# Verificar se Docker est√° instalado
try {
    docker --version | Out-Null
    Write-Info "Docker encontrado"
} catch {
    Write-Error "Docker n√£o est√° instalado. Por favor, instale o Docker Desktop primeiro."
}

# Verificar se Docker Compose est√° instalado
try {
    docker-compose --version | Out-Null
    Write-Info "Docker Compose encontrado"
} catch {
    Write-Error "Docker Compose n√£o est√° instalado. Por favor, instale o Docker Compose primeiro."
}

# Verificar se Node.js est√° instalado
$NodeAvailable = $false
try {
    node --version | Out-Null
    Write-Info "Node.js encontrado"
    $NodeAvailable = $true
} catch {
    Write-Warning "Node.js n√£o est√° instalado. Instalando depend√™ncias apenas via Docker..."
}

# Verificar se Yarn est√° instalado
if ($NodeAvailable) {
    try {
        yarn --version | Out-Null
        Write-Info "Yarn encontrado"
    } catch {
        Write-Warning "Yarn n√£o est√° instalado. Instalando..."
        npm install -g yarn
    }
}

Write-Info "Criando diret√≥rio de conte√∫do..."
if (!(Test-Path "content")) {
    New-Item -ItemType Directory -Path "content" | Out-Null
}

Write-Info "Construindo imagem Docker..."
docker build -t ghost-cms-fork .

if ($LASTEXITCODE -ne 0) {
    Write-Error "Falha ao construir a imagem Docker"
}

Write-Info "Subindo servi√ßos..."
docker-compose up -d

if ($LASTEXITCODE -ne 0) {
    Write-Error "Falha ao iniciar os servi√ßos"
}

Write-Info "Aguardando servi√ßos iniciarem..."
Start-Sleep -Seconds 30

# Verificar se os servi√ßos est√£o rodando
$Services = docker-compose ps --services
$RunningServices = docker-compose ps --services --filter "status=running"

if ($RunningServices.Count -eq 0) {
    Write-Error "Falha ao iniciar os servi√ßos. Verifique os logs com: docker-compose logs"
}

Write-Info "Verificando sa√∫de dos servi√ßos..."
Start-Sleep -Seconds 10

# Verificar MySQL
try {
    docker-compose exec mysql mysqladmin ping -h localhost -u mysql -p91cf92ea3a47f6ced4f7 --silent
    Write-Info "‚úÖ MySQL est√° rodando"
} catch {
    Write-Warning "‚ö†Ô∏è MySQL pode n√£o estar totalmente pronto ainda"
}

# Verificar Ghost
try {
    $Response = Invoke-WebRequest -Uri "http://localhost:2368/ghost/" -UseBasicParsing -TimeoutSec 5
    Write-Info "‚úÖ Ghost est√° rodando"
} catch {
    Write-Warning "‚ö†Ô∏è Ghost pode n√£o estar totalmente pronto ainda"
}

# Executar seed se solicitado
if (!$SkipSeed -and $NodeAvailable) {
    Write-Info "Executando seed..."
    try {
        yarn install
        node seed.js
        Write-Info "‚úÖ Seed executado com sucesso"
    } catch {
        Write-Warning "Seed falhou ou j√° foi executado"
    }
} elseif (!$SkipSeed) {
    Write-Warning "Seed n√£o executado - Node.js n√£o dispon√≠vel localmente"
}

Write-Host ""
Write-Host "üéâ Setup conclu√≠do!" -ForegroundColor Blue
Write-Host ""
Write-Host "üìã Pr√≥ximos passos:" -ForegroundColor Green
Write-Host "1. Acesse: http://localhost:2368"
Write-Host "2. Admin: http://localhost:2368/ghost/"
Write-Host "3. Login: admin@clebersocial.com.br / admin123!@#"
Write-Host ""
Write-Host "üîß Comandos √∫teis:" -ForegroundColor Green
Write-Host "‚Ä¢ Ver logs: docker-compose logs -f"
Write-Host "‚Ä¢ Parar: docker-compose down"
Write-Host "‚Ä¢ Reiniciar: docker-compose restart"
Write-Host "‚Ä¢ Shell: docker-compose exec ghost-fork /bin/bash"
Write-Host ""
Write-Host "üìö Para deploy no Easypanel:" -ForegroundColor Green
Write-Host "1. Commit e push do c√≥digo"
Write-Host "2. Importe o reposit√≥rio no Easypanel"
Write-Host "3. Configure o dom√≠nio: blog.clebersocial.com.br"
Write-Host ""
Write-Host "‚ö†Ô∏è IMPORTANTE: Altere a senha padr√£o ap√≥s o primeiro login!" -ForegroundColor Yellow
